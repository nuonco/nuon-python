"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from nuon.types import BaseModel
import pydantic
from typing import Dict, Optional, TYPE_CHECKING
from typing_extensions import Annotated, NotRequired, TypedDict

if TYPE_CHECKING:
    from .app_helmchart import AppHelmChart, AppHelmChartTypedDict


class AppHelmReleaseTypedDict(TypedDict):
    body: NotRequired[str]
    r"""The rspb.Release body, as a base64-encoded string"""
    created_at: NotRequired[str]
    created_by_id: NotRequired[str]
    helm_chart: NotRequired["AppHelmChartTypedDict"]
    helm_chart_id: NotRequired[str]
    key: NotRequired[str]
    labels: NotRequired[Dict[str, str]]
    name: NotRequired[str]
    r"""Release \"labels\" that can be used as filters in the storage.Query(labels map[string]string)
    we implemented. Note that allowing Helm users to filter against new dimensions will require a
    new migration to be added, and the Create and/or update functions to be updated accordingly.
    """
    namespace: NotRequired[str]
    org_id: NotRequired[str]
    owner: NotRequired[str]
    status: NotRequired[str]
    type: NotRequired[str]
    r"""See https://github.com/helm/helm/blob/c9fe3d118caec699eb2565df9838673af379ce12/pkg/storage/driver/secrets.go#L231"""
    updated_at: NotRequired[str]
    version: NotRequired[int]


class AppHelmRelease(BaseModel):
    body: Optional[str] = None
    r"""The rspb.Release body, as a base64-encoded string"""

    created_at: Optional[str] = None

    created_by_id: Optional[str] = None

    helm_chart: Annotated[
        Optional["AppHelmChart"], pydantic.Field(alias="helmChart")
    ] = None

    helm_chart_id: Annotated[Optional[str], pydantic.Field(alias="helmChartID")] = None

    key: Optional[str] = None

    labels: Optional[Dict[str, str]] = None

    name: Optional[str] = None
    r"""Release \"labels\" that can be used as filters in the storage.Query(labels map[string]string)
    we implemented. Note that allowing Helm users to filter against new dimensions will require a
    new migration to be added, and the Create and/or update functions to be updated accordingly.
    """

    namespace: Optional[str] = None

    org_id: Optional[str] = None

    owner: Optional[str] = None

    status: Optional[str] = None

    type: Optional[str] = None
    r"""See https://github.com/helm/helm/blob/c9fe3d118caec699eb2565df9838673af379ce12/pkg/storage/driver/secrets.go#L231"""

    updated_at: Optional[str] = None

    version: Optional[int] = None
