"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from nuon.types import BaseModel
from nuon.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
    SecurityMetadata,
)
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetAppConfigTemplateSecurityTypedDict(TypedDict):
    api_key: NotRequired[str]
    org_id: NotRequired[str]


class GetAppConfigTemplateSecurity(BaseModel):
    api_key: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="Authorization",
            )
        ),
    ] = None

    org_id: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="X-Nuon-Org-ID",
            )
        ),
    ] = None


class Type(str, Enum):
    r"""app template type"""

    AWS_ECS = "aws-ecs"
    AWS_ECS_BYOVPC = "aws-ecs-byovpc"
    AWS_EKS = "aws-eks"
    AWS_EKS_BYOVPC = "aws-eks-byovpc"
    AZURE_AKS = "azure-aks"
    FLAT = "flat"
    TOP_LEVEL = "top-level"
    INSTALLER = "installer"
    RUNNER = "runner"
    SANDBOX = "sandbox"
    INPUTS = "inputs"
    TERRAFORM = "terraform"
    TERRAFORM_INFRA = "terraformInfra"
    HELM = "helm"
    DOCKER_BUILD = "docker-build"
    JOB = "job"
    CONTAINER_IMAGE = "container-image"
    ECR_CONTAINER_IMAGE = "ecr-container-image"


class GetAppConfigTemplateRequestTypedDict(TypedDict):
    app_id: str
    r"""app ID"""
    type: Type
    r"""app template type"""


class GetAppConfigTemplateRequest(BaseModel):
    app_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""app ID"""

    type: Annotated[
        Type, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""app template type"""
