"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .app_account import AppAccount, AppAccountTypedDict
from .app_compositestatus import AppCompositeStatus, AppCompositeStatusTypedDict
from .app_installapprovaloption import AppInstallApprovalOption
from .app_steperrorbehavior import AppStepErrorBehavior
from .app_workflowstep import AppWorkflowStep, AppWorkflowStepTypedDict
from .app_workflowtype import AppWorkflowType
from nuon.types import BaseModel
from typing import Any, Dict, List, Optional, TYPE_CHECKING
from typing_extensions import NotRequired, TypedDict

if TYPE_CHECKING:
    from .app_installactionworkflowrun import (
        AppInstallActionWorkflowRun,
        AppInstallActionWorkflowRunTypedDict,
    )
    from .app_installdeploy import AppInstallDeploy, AppInstallDeployTypedDict
    from .app_installsandboxrun import (
        AppInstallSandboxRun,
        AppInstallSandboxRunTypedDict,
    )


class AppWorkflowTypedDict(TypedDict):
    approval_option: NotRequired[AppInstallApprovalOption]
    created_at: NotRequired[str]
    created_by: NotRequired[AppAccountTypedDict]
    created_by_id: NotRequired[str]
    execution_time: NotRequired[int]
    finished: NotRequired[bool]
    finished_at: NotRequired[str]
    id: NotRequired[str]
    install_action_workflow_runs: NotRequired[
        List["AppInstallActionWorkflowRunTypedDict"]
    ]
    install_deploys: NotRequired[List["AppInstallDeployTypedDict"]]
    install_sandbox_runs: NotRequired[List["AppInstallSandboxRunTypedDict"]]
    links: NotRequired[Dict[str, Any]]
    metadata: NotRequired[Dict[str, str]]
    name: NotRequired[str]
    owner_id: NotRequired[str]
    owner_type: NotRequired[str]
    plan_only: NotRequired[bool]
    started_at: NotRequired[str]
    status: NotRequired[AppCompositeStatusTypedDict]
    step_error_behavior: NotRequired[AppStepErrorBehavior]
    steps: NotRequired[List[AppWorkflowStepTypedDict]]
    r"""steps represent each piece of the workflow"""
    type: NotRequired[AppWorkflowType]
    updated_at: NotRequired[str]


class AppWorkflow(BaseModel):
    approval_option: Optional[AppInstallApprovalOption] = None

    created_at: Optional[str] = None

    created_by: Optional[AppAccount] = None

    created_by_id: Optional[str] = None

    execution_time: Optional[int] = None

    finished: Optional[bool] = None

    finished_at: Optional[str] = None

    id: Optional[str] = None

    install_action_workflow_runs: Optional[List["AppInstallActionWorkflowRun"]] = None

    install_deploys: Optional[List["AppInstallDeploy"]] = None

    install_sandbox_runs: Optional[List["AppInstallSandboxRun"]] = None

    links: Optional[Dict[str, Any]] = None

    metadata: Optional[Dict[str, str]] = None

    name: Optional[str] = None

    owner_id: Optional[str] = None

    owner_type: Optional[str] = None

    plan_only: Optional[bool] = None

    started_at: Optional[str] = None

    status: Optional[AppCompositeStatus] = None

    step_error_behavior: Optional[AppStepErrorBehavior] = None

    steps: Optional[List[AppWorkflowStep]] = None
    r"""steps represent each piece of the workflow"""

    type: Optional[AppWorkflowType] = None

    updated_at: Optional[str] = None
