"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from nuon.types import BaseModel
from nuon.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
    SecurityMetadata,
)
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetAppConfigSecurityTypedDict(TypedDict):
    api_key: NotRequired[str]
    org_id: NotRequired[str]


class GetAppConfigSecurity(BaseModel):
    api_key: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="Authorization",
            )
        ),
    ] = None

    org_id: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="X-Nuon-Org-ID",
            )
        ),
    ] = None


class GetAppConfigRequestTypedDict(TypedDict):
    app_id: str
    r"""app ID"""
    app_config_id: str
    r"""app config ID"""
    recurse: NotRequired[bool]
    r"""load all children configs"""


class GetAppConfigRequest(BaseModel):
    app_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""app ID"""

    app_config_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""app config ID"""

    recurse: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = False
    r"""load all children configs"""
