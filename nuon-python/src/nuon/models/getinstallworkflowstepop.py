"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from nuon.types import BaseModel
from nuon.utils import FieldMetadata, PathParamMetadata, SecurityMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetInstallWorkflowStepSecurityTypedDict(TypedDict):
    api_key: NotRequired[str]
    org_id: NotRequired[str]


class GetInstallWorkflowStepSecurity(BaseModel):
    api_key: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="Authorization",
            )
        ),
    ] = None

    org_id: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="X-Nuon-Org-ID",
            )
        ),
    ] = None


class GetInstallWorkflowStepRequestTypedDict(TypedDict):
    install_workflow_id: str
    r"""workflow id"""
    install_workflow_step_id: str
    r"""step id"""


class GetInstallWorkflowStepRequest(BaseModel):
    install_workflow_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""workflow id"""

    install_workflow_step_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""step id"""
