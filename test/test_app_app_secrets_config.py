# coding: utf-8

"""
    Nuon

    API for managing nuon apps, components, installs, and actions.

    The version of the OpenAPI document: cc3796a
    Contact: support@nuon.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nuon.models.app_app_secrets_config import AppAppSecretsConfig

class TestAppAppSecretsConfig(unittest.TestCase):
    """AppAppSecretsConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppAppSecretsConfig:
        """Test AppAppSecretsConfig
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppAppSecretsConfig`
        """
        model = AppAppSecretsConfig()
        if include_optional:
            return AppAppSecretsConfig(
                app_config_id = '',
                app_id = '',
                created_at = '',
                created_by_id = '',
                id = '',
                org_id = '',
                secrets = [
                    nuon.models.app/app_secret_config.app.AppSecretConfig(
                        app_config_id = '', 
                        app_id = '', 
                        app_secrets_config_id = '', 
                        auto_generate = True, 
                        cloudformation_param_name = '', 
                        cloudformation_stack_name = '', 
                        created_at = '', 
                        created_by_id = '', 
                        default = '', 
                        description = '', 
                        display_name = '', 
                        format = '', 
                        id = '', 
                        kubernetes_secret_name = '', 
                        kubernetes_secret_namespace = '', 
                        kubernetes_sync = True, 
                        name = '', 
                        org_id = '', 
                        required = True, 
                        updated_at = '', )
                    ],
                updated_at = ''
            )
        else:
            return AppAppSecretsConfig(
        )
        """

    def testAppAppSecretsConfig(self):
        """Test AppAppSecretsConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
