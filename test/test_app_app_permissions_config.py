# coding: utf-8

"""
    Nuon

    API for managing nuon apps, components, installs, and actions.

    The version of the OpenAPI document: cc3796a
    Contact: support@nuon.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nuon.models.app_app_permissions_config import AppAppPermissionsConfig

class TestAppAppPermissionsConfig(unittest.TestCase):
    """AppAppPermissionsConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppAppPermissionsConfig:
        """Test AppAppPermissionsConfig
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppAppPermissionsConfig`
        """
        model = AppAppPermissionsConfig()
        if include_optional:
            return AppAppPermissionsConfig(
                app_config_id = '',
                app_id = '',
                aws_iam_roles = [
                    nuon.models.app/app_awsiam_role_config.app.AppAWSIAMRoleConfig(
                        app_config_id = '', 
                        cloudformation_param_name = '', 
                        cloudformation_stack_name = '', 
                        created_at = '', 
                        created_by_id = '', 
                        description = '', 
                        display_name = '', 
                        id = '', 
                        name = '', 
                        org_id = '', 
                        owner_id = '', 
                        owner_type = '', 
                        permissions_boundary = '', 
                        policies = [
                            nuon.models.app/app_awsiam_policy_config.app.AppAWSIAMPolicyConfig(
                                app_aws_iam_role_config_id = '', 
                                app_config_id = '', 
                                cloudformation_stack_name = '', 
                                contents = '', 
                                created_at = '', 
                                created_by_id = '', 
                                id = '', 
                                managed_policy_name = '', 
                                name = '', 
                                org_id = '', 
                                updated_at = '', )
                            ], 
                        type = 'runner_provision', 
                        updated_at = '', )
                    ],
                created_at = '',
                created_by_id = '',
                deprovision_aws_iam_role = nuon.models.app/app_awsiam_role_config.app.AppAWSIAMRoleConfig(
                    app_config_id = '', 
                    cloudformation_param_name = '', 
                    cloudformation_stack_name = '', 
                    created_at = '', 
                    created_by_id = '', 
                    description = '', 
                    display_name = '', 
                    id = '', 
                    name = '', 
                    org_id = '', 
                    owner_id = '', 
                    owner_type = '', 
                    permissions_boundary = '', 
                    policies = [
                        nuon.models.app/app_awsiam_policy_config.app.AppAWSIAMPolicyConfig(
                            app_aws_iam_role_config_id = '', 
                            app_config_id = '', 
                            cloudformation_stack_name = '', 
                            contents = '', 
                            created_at = '', 
                            created_by_id = '', 
                            id = '', 
                            managed_policy_name = '', 
                            name = '', 
                            org_id = '', 
                            updated_at = '', )
                        ], 
                    type = 'runner_provision', 
                    updated_at = '', ),
                id = '',
                maintenance_aws_iam_role = nuon.models.app/app_awsiam_role_config.app.AppAWSIAMRoleConfig(
                    app_config_id = '', 
                    cloudformation_param_name = '', 
                    cloudformation_stack_name = '', 
                    created_at = '', 
                    created_by_id = '', 
                    description = '', 
                    display_name = '', 
                    id = '', 
                    name = '', 
                    org_id = '', 
                    owner_id = '', 
                    owner_type = '', 
                    permissions_boundary = '', 
                    policies = [
                        nuon.models.app/app_awsiam_policy_config.app.AppAWSIAMPolicyConfig(
                            app_aws_iam_role_config_id = '', 
                            app_config_id = '', 
                            cloudformation_stack_name = '', 
                            contents = '', 
                            created_at = '', 
                            created_by_id = '', 
                            id = '', 
                            managed_policy_name = '', 
                            name = '', 
                            org_id = '', 
                            updated_at = '', )
                        ], 
                    type = 'runner_provision', 
                    updated_at = '', ),
                org_id = '',
                provision_aws_iam_role = nuon.models.app/app_awsiam_role_config.app.AppAWSIAMRoleConfig(
                    app_config_id = '', 
                    cloudformation_param_name = '', 
                    cloudformation_stack_name = '', 
                    created_at = '', 
                    created_by_id = '', 
                    description = '', 
                    display_name = '', 
                    id = '', 
                    name = '', 
                    org_id = '', 
                    owner_id = '', 
                    owner_type = '', 
                    permissions_boundary = '', 
                    policies = [
                        nuon.models.app/app_awsiam_policy_config.app.AppAWSIAMPolicyConfig(
                            app_aws_iam_role_config_id = '', 
                            app_config_id = '', 
                            cloudformation_stack_name = '', 
                            contents = '', 
                            created_at = '', 
                            created_by_id = '', 
                            id = '', 
                            managed_policy_name = '', 
                            name = '', 
                            org_id = '', 
                            updated_at = '', )
                        ], 
                    type = 'runner_provision', 
                    updated_at = '', ),
                updated_at = ''
            )
        else:
            return AppAppPermissionsConfig(
        )
        """

    def testAppAppPermissionsConfig(self):
        """Test AppAppPermissionsConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
