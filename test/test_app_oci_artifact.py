# coding: utf-8

"""
    Nuon

    API for managing nuon apps, components, installs, and actions.

    The version of the OpenAPI document: cc3796a
    Contact: support@nuon.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nuon.models.app_oci_artifact import AppOCIArtifact

class TestAppOCIArtifact(unittest.TestCase):
    """AppOCIArtifact unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppOCIArtifact:
        """Test AppOCIArtifact
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppOCIArtifact`
        """
        model = AppOCIArtifact()
        if include_optional:
            return AppOCIArtifact(
                annotations = {
                    'key' : ''
                    },
                architecture = '',
                artifact_type = '',
                created_at = '',
                created_by_id = '',
                digest = '',
                id = '',
                media_type = '',
                org_id = '',
                os = '',
                os_features = [
                    ''
                    ],
                os_version = '',
                owner_id = '',
                owner_type = '',
                repository = '',
                size = 56,
                tag = '',
                updated_at = '',
                urls = [
                    ''
                    ],
                variant = ''
            )
        else:
            return AppOCIArtifact(
        )
        """

    def testAppOCIArtifact(self):
        """Test AppOCIArtifact"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
