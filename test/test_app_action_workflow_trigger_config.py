# coding: utf-8

"""
    Nuon

    API for managing nuon apps, components, installs, and actions.

    The version of the OpenAPI document: cc3796a
    Contact: support@nuon.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nuon.models.app_action_workflow_trigger_config import AppActionWorkflowTriggerConfig

class TestAppActionWorkflowTriggerConfig(unittest.TestCase):
    """AppActionWorkflowTriggerConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppActionWorkflowTriggerConfig:
        """Test AppActionWorkflowTriggerConfig
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppActionWorkflowTriggerConfig`
        """
        model = AppActionWorkflowTriggerConfig()
        if include_optional:
            return AppActionWorkflowTriggerConfig(
                action_workflow_config_id = '',
                app_config_id = '',
                app_id = '',
                component = nuon.models.app/component.app.Component(
                    app_id = '', 
                    config_versions = 56, 
                    created_at = '', 
                    created_by_id = '', 
                    dependencies = [
                        ''
                        ], 
                    id = '', 
                    links = {
                        'key' : null
                        }, 
                    name = '', 
                    resolved_var_name = '', 
                    status = '', 
                    status_description = '', 
                    type = 'terraform_module', 
                    updated_at = '', 
                    var_name = '', ),
                component_id = '',
                created_at = '',
                created_by_id = '',
                cron_schedule = '',
                id = '',
                type = '',
                updated_at = ''
            )
        else:
            return AppActionWorkflowTriggerConfig(
        )
        """

    def testAppActionWorkflowTriggerConfig(self):
        """Test AppActionWorkflowTriggerConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
